{"version":3,"sources":["../api/index.js"],"names":["app","PORT","process","env","use","bodyParser","json","urlencoded","extended","swaggerUi","serve","setup","swaggerDocument","Routes","User","hasMany","Order","constraints","onDelete","OrderItem","belongsTo","Caterer","Meal","Menu","sequelize","sync","then","console","log","listen","emit","catch","err","error"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;AAEA,IAAMA,GAAG,GAAG,uBAAZ;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAD,GAAG,CAACI,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AACAN,GAAG,CAACI,GAAJ,CAAQC,oBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAR,GAAG,CAACI,GAAJ,CAAQ,oBAAR;AACAJ,GAAG,CAACI,GAAJ,CAAQ,iCAAR;AACAJ,GAAG,CAACI,GAAJ,CAAQ,WAAR,EAAqBK,0BAAUC,KAA/B,EAAsCD,0BAAUE,KAAV,CAAgBC,gBAAhB,CAAtC;AACAZ,GAAG,CAACI,GAAJ,CAAQ,SAAR,EAAmBS,eAAnB;;AAEAC,cAAKC,OAAL,CAAaC,eAAb,EAAoB;AAAEC,EAAAA,WAAW,EAAE,IAAf;AAAqBC,EAAAA,QAAQ,EAAE;AAA/B,CAApB;;AACAJ,cAAKC,OAAL,CAAaI,kBAAb,EAAwB;AAAEF,EAAAA,WAAW,EAAE,IAAf;AAAqBC,EAAAA,QAAQ,EAAE;AAA/B,CAAxB;;AACAF,gBAAMI,SAAN,CAAgBC,gBAAhB,EAAyB;AAAEJ,EAAAA,WAAW,EAAE,IAAf;AAAqBC,EAAAA,QAAQ,EAAE;AAA/B,CAAzB;;AACAI,eAAKF,SAAL,CAAeC,gBAAf,EAAwB;AAAEJ,EAAAA,WAAW,EAAE,IAAf;AAAqBC,EAAAA,QAAQ,EAAE;AAA/B,CAAxB;;AACAK,cAAKH,SAAL,CAAeC,gBAAf,EAAwB;AAAEJ,EAAAA,WAAW,EAAE,IAAf;AAAqBC,EAAAA,QAAQ,EAAE;AAA/B,CAAxB;;AACAC,mBAAUC,SAAV,CAAoBE,cAApB,EAA0B;AAAEL,EAAAA,WAAW,EAAE,IAAf;AAAqBC,EAAAA,QAAQ,EAAE;AAA/B,CAA1B;;AAEAM,YACGC,IADH,GAEGC,IAFH,CAEQ,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA5B,EAAAA,GAAG,CAAC6B,MAAJ,CAAW5B,IAAX,EAAiB,IAAjB,EAAuB,IAAvB,EAA6B,YAAM;AACjCD,IAAAA,GAAG,CAAC8B,IAAJ,CAAS,aAAT;AACD,GAFD;AAGD,CAPH,EAQGC,KARH,CAQS,UAAAC,GAAG,EAAI;AACZL,EAAAA,OAAO,CAACM,KAAR,CAAc,oCAAd,EAAoDD,GAApD;AACD,CAVH;;eAYehC,G","sourcesContent":["import '@babel/polyfill';\r\nimport express from 'express';\r\nimport fileUpload from 'express-fileupload';\r\nimport bodyParser from 'body-parser';\r\nimport { config } from 'dotenv';\r\nimport cors from 'cors';\r\nimport swaggerUi from 'swagger-ui-express';\r\nimport Routes from './routes';\r\nimport sequelize from './util/db';\r\nimport User from './models/user';\r\nimport Caterer from './models/caterer';\r\nimport Meal from './models/meals';\r\nimport Menu from './models/menu';\r\nimport Order from './models/orders';\r\nimport OrderItem from './models/orderItem';\r\nimport swaggerDocument from './swagger';\r\n\r\nconfig();\r\n\r\nconst app = express();\r\n\r\nconst PORT = process.env.PORT || 4000;\r\n\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(cors());\r\napp.use(fileUpload());\r\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\r\napp.use('/api/v1', Routes);\r\n\r\nUser.hasMany(Order, { constraints: true, onDelete: 'CASCADE' });\r\nUser.hasMany(OrderItem, { constraints: true, onDelete: 'CASCADE' });\r\nOrder.belongsTo(Caterer, { constraints: true, onDelete: 'CASCADE' });\r\nMeal.belongsTo(Caterer, { constraints: true, onDelete: 'CASCADE' });\r\nMenu.belongsTo(Caterer, { constraints: true, onDelete: 'CASCADE' });\r\nOrderItem.belongsTo(Meal, { constraints: true, onDelete: 'CASCADE' });\r\n\r\nsequelize\r\n  .sync()\r\n  .then(() => {\r\n    console.log('DB Connection has been established');\r\n    app.listen(PORT, null, null, () => {\r\n      app.emit('dbConnected');\r\n    });\r\n  })\r\n  .catch(err => {\r\n    console.error('Unable to connect to the database:', err);\r\n  });\r\n\r\nexport default app;\r\n"],"file":"index.js"}