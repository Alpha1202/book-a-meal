{"version":3,"sources":["../../api/controllers/orders.js"],"names":["OrderController","req","res","body","mealId","quantity","customerId","order","Order","addOrder","status","json","message","fetchAll","orders","response","code","data","error","orderId","params","action","modifyOrderMeals"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;IAEMA,e;;;;;;;;;;;;+CACmBC,G,EAAKC,G;;;;;;;4BACeD,GAAG,CAACE,I,EAArCC,M,aAAAA,M,EAAQC,Q,aAAAA,Q,EAAUC,U,aAAAA,U;AACpBC,gBAAAA,K,GAAQ,IAAIC,eAAJ,CAAU,IAAV,EAAgBF,UAAhB,C;;uBACRC,KAAK,CAACE,QAAN,CAAeL,MAAf,EAAuBC,QAAvB,C;;;iDACCH,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAAA,MAAM,EAAE,SADkB;AAE1BE,kBAAAA,OAAO,EAAE;AAFiB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;gDAMcX,G,EAAKC,G;;;;;;;;uBAGHM,gBAAMK,QAAN,E;;;AAAfC,gBAAAA,M;AACNC,gBAAAA,QAAQ,GAAG;AACTC,kBAAAA,IAAI,EAAE,GADG;AAETb,kBAAAA,IAAI,EAAE;AACJO,oBAAAA,MAAM,EAAE,SADJ;AAEJE,oBAAAA,OAAO,EAAE,kBAFL;AAGJK,oBAAAA,IAAI,EAAEH;AAHF;AAFG,iBAAX;;;;;;;AASAC,gBAAAA,QAAQ,GAAG;AACTC,kBAAAA,IAAI,EAAE,GADG;AAETb,kBAAAA,IAAI,EAAE;AACJO,oBAAAA,MAAM,EAAE,OADJ;AAEJE,oBAAAA,OAAO,EAAE,0BAFL;AAGJM,oBAAAA,KAAK,EAAE,aAAIN;AAHP;AAFG,iBAAX;;;kDASKV,GAAG,CAACQ,MAAJ,CAAWK,QAAQ,CAACC,IAApB,EAA0BL,IAA1B,CAA+BI,QAAQ,CAACZ,IAAxC,C;;;;;;;;;;;;;;;;;;;;;gDAGgBF,G,EAAKC,G;;;;;;;AACpBiB,gBAAAA,O,GAAYlB,GAAG,CAACmB,M,CAAhBD,O;6BACmBlB,GAAG,CAACE,I,EAAvBC,M,cAAAA,M,EAAQiB,M,cAAAA,M;;uBACVb,gBAAMc,gBAAN,CAAuBH,OAAvB,EAAgCf,MAAhC,EAAwCiB,MAAxC,C;;;kDACCnB,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,kBAAAA,MAAM,EAAE,SADkB;AAE1BE,kBAAAA,OAAO,EAAE;AAFiB,iBAArB,C;;;;;;;;;;;;;;;;;;;;;eAOIZ,e","sourcesContent":["import Order from '../models/orders';\r\n\r\nclass OrderController {\r\n  static async orderMeal(req, res) {\r\n    const { mealId, quantity, customerId } = req.body;\r\n    const order = new Order(null, customerId);\r\n    await order.addOrder(mealId, quantity);\r\n    return res.status(201).json({\r\n      status: 'success',\r\n      message: 'Order Made'\r\n    });\r\n  }\r\n\r\n  static async getOrders(req, res) {\r\n    let response;\r\n    try {\r\n      const orders = await Order.fetchAll();\r\n      response = {\r\n        code: 200,\r\n        body: {\r\n          status: 'success',\r\n          message: 'Orders Retrieved',\r\n          data: orders\r\n        }\r\n      };\r\n    } catch (err) {\r\n      response = {\r\n        code: 500,\r\n        body: {\r\n          status: 'error',\r\n          message: 'Failed to Retrive Orders',\r\n          error: err.message\r\n        }\r\n      };\r\n    }\r\n    return res.status(response.code).json(response.body);\r\n  }\r\n\r\n  static async modifyOrder(req, res) {\r\n    const { orderId } = req.params;\r\n    const { mealId, action } = req.body;\r\n    await Order.modifyOrderMeals(orderId, mealId, action);\r\n    return res.status(200).json({\r\n      status: 'success',\r\n      message: 'Order Updated'\r\n    });\r\n  }\r\n}\r\n\r\nexport default OrderController;\r\n"],"file":"orders.js"}