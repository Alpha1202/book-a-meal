{"version":3,"sources":["../../api/controllers/meals.js"],"names":["MealController","req","res","body","name","price","image","files","imageUrl","Meal","create","catererId","caterer","id","meal","mv","status","json","message","data","findAll","where","meals","findOne","params","Error","mealUpdate","fs","unlink","err","update","destroy"],"mappings":"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","sourcesContent":["import fs from 'fs';\r\nimport Meal from '../models/meals';\r\n\r\nclass MealController {\r\n  static async addMealOption(req, res) {\r\n    try {\r\n      const { name, price } = req.body;\r\n      const { image } = req.files;\r\n      const imageUrl = `/api/images/${image.name}`;\r\n      const meal = await Meal.create({ name, price, imageUrl, catererId: req.caterer.id });\r\n      await image.mv(`.${imageUrl}`);\r\n      return res.status(201).json({\r\n        status: 'success',\r\n        message: 'Meal Option Added',\r\n        data: {\r\n          id: meal.id,\r\n          name: meal.name,\r\n          price: meal.price,\r\n          imageUrl: meal.imageUrl\r\n        }\r\n      });\r\n    } catch (err) {\r\n      return res.status(500).json({\r\n        status: 'error',\r\n        message: err.message\r\n      });\r\n    }\r\n  }\r\n\r\n  static async getMealOptions(req, res) {\r\n    try {\r\n      const meals = await Meal.findAll({ where: { catererId: req.caterer.id } });\r\n      return res.status(200).json({\r\n        status: 'success',\r\n        message: 'Meals Retrieved',\r\n        data: meals\r\n      });\r\n    } catch (err) {\r\n      return res.status(500).json({\r\n        status: 'error',\r\n        message: 'Failed to Retrieve Meals'\r\n      });\r\n    }\r\n  }\r\n\r\n  static async updateMealOption(req, res) {\r\n    try {\r\n      const meal = await Meal.findOne({ where: { id: req.params.id } });\r\n      if (!meal) {\r\n        throw new Error(`Meal With ID ${req.params.id} does not exist`);\r\n      }\r\n      const mealUpdate = {\r\n        name: req.body.name ? req.body.name : meal.name,\r\n        price: req.body.price ? req.body.price : meal.price\r\n      };\r\n      if (req.files !== null) {\r\n        const { image } = req.files;\r\n        const imageUrl = `/api/images/${image.name}`;\r\n        fs.unlink(`.${meal.imageUrl}`, err => {\r\n          if (err) throw new Error(err.message);\r\n        });\r\n        mealUpdate.imageUrl = imageUrl;\r\n        await image.mv(`.${imageUrl}`);\r\n      } else {\r\n        mealUpdate.imageUrl = meal.imageUrl;\r\n      }\r\n      const { name, price, imageUrl } = mealUpdate;\r\n      await Meal.update({ name, price, imageUrl }, { where: { id: req.params.id } });\r\n      return res.status(200).json({\r\n        status: 'success',\r\n        message: 'Meal Option Updated'\r\n      });\r\n    } catch (err) {\r\n      return res.status(500).json({\r\n        status: 'error',\r\n        message: err.message\r\n      });\r\n    }\r\n  }\r\n\r\n  static async deleteMealOption(req, res) {\r\n    try {\r\n      const { id } = req.params;\r\n      const meal = await Meal.findOne({ where: { id } });\r\n      fs.unlink(`.${meal.imageUrl}`, err => {\r\n        if (err) throw new Error(err.message);\r\n      });\r\n      await meal.destroy();\r\n      return res.status(200).json({\r\n        status: 'success',\r\n        message: 'Meal Option Deleted'\r\n      });\r\n    } catch (err) {\r\n      return res.status(500).json({\r\n        status: 'error',\r\n        message: err.message\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default MealController;\r\n"],"file":"meals.js"}