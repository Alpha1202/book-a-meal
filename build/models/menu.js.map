{"version":3,"sources":["../../api/models/menu.js"],"names":["p","getMenusFromFile","Promise","resolve","fs","readFile","err","fileContent","JSON","parse","Menu","catererId","date","meals","caterer","id","quantity","Meal","fetch","meal","menus","Date","toLocaleString","day","month","year","allMenus","menuIndex","findIndex","menu","Number","newMenu","push","writeFile","stringify","console","log","Error","message","mealId","mealIndex","splice"],"mappings":"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","sourcesContent":["import fs from 'fs';\r\nimport Meal from './meals';\r\n\r\nconst p = './api/data/menu.json';\r\n\r\nconst getMenusFromFile = () => {\r\n  return new Promise(resolve => {\r\n    fs.readFile(p, (err, fileContent) => {\r\n      if (err) {\r\n        resolve([]);\r\n      } else {\r\n        resolve(JSON.parse(fileContent));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nclass Menu {\r\n  constructor(catererId = 1, date, meals) {\r\n    this.caterer = catererId;\r\n    this.date = date;\r\n    this.meals = meals;\r\n  }\r\n\r\n  async add(id, quantity) {\r\n    try {\r\n      const meal = await Meal.fetch(id);\r\n      const menus = await getMenusFromFile();\r\n      const date = new Date();\r\n      this.date = date.toLocaleString('en-us', {\r\n        day: '2-digit',\r\n        month: 'long',\r\n        year: 'numeric'\r\n      });\r\n      const allMenus = [...menus];\r\n      const menuIndex = menus.findIndex(menu => Number(menu.caterer) === Number(this.caterer));\r\n      if (menuIndex !== -1) {\r\n        const newMenu = allMenus[menuIndex];\r\n        meal.quantity = quantity;\r\n        newMenu.meals.push(meal);\r\n      } else {\r\n        const newMenu = {};\r\n        newMenu.date = this.date;\r\n        newMenu.caterer = this.caterer;\r\n        meal.quantity = quantity;\r\n        newMenu.meals = [meal];\r\n        allMenus.push(newMenu);\r\n      }\r\n      fs.writeFile(p, JSON.stringify(allMenus), err => {\r\n        if (err) console.log(err);\r\n      });\r\n    } catch (err) {\r\n      throw new Error(err.message);\r\n    }\r\n  }\r\n\r\n  static async fetchAll() {\r\n    try {\r\n      const menus = await getMenusFromFile();\r\n      return menus;\r\n    } catch (err) {\r\n      throw new Error(err.message);\r\n    }\r\n  }\r\n\r\n  static async fetchOneMenu(catererId = 1) {\r\n    try {\r\n      const menus = await getMenusFromFile();\r\n      const menuIndex = menus.findIndex(menu => Number(menu.caterer) === Number(catererId));\r\n      return menus[menuIndex];\r\n    } catch (err) {\r\n      throw new Error(err.message);\r\n    }\r\n  }\r\n\r\n  static async deleteMealFromMenu(mealId, catererId = 1) {\r\n    try {\r\n      const menus = await getMenusFromFile();\r\n      const menuIndex = menus.findIndex(menu => Number(menu.caterer) === Number(catererId));\r\n      const { meals } = menus[menuIndex];\r\n      const mealIndex = meals.findIndex(meal => meal.id === mealId);\r\n      meals.splice(mealIndex, 1);\r\n      menus[menuIndex].meals = meals;\r\n      fs.writeFile(p, JSON.stringify(menus), err => {\r\n        if (err) console.log(err);\r\n      });\r\n    } catch (err) {\r\n      throw new Error(err.message);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n"],"file":"menu.js"}